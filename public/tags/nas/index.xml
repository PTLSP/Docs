<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PTLSPの文档 – NAS</title>
    <link>https://docs.ptlsp.com/tags/nas/</link>
    <description>Recent content in NAS on PTLSPの文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Tue, 16 Jan 2024 07:04:17 +0000</lastBuildDate>
    
	  <atom:link href="https://docs.ptlsp.com/tags/nas/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>反代教程之内网服务拥有自己的专属域名</title>
      <link>https://docs.ptlsp.com/blog/2024-01-16.nas%E5%8F%8D%E4%BB%A3%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%8F%AA%E9%9C%80%E4%B8%80%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%B0%B1%E5%A4%9F%E5%95%A6/</link>
      <pubDate>Tue, 16 Jan 2024 07:04:17 +0000</pubDate>
      
      <guid>https://docs.ptlsp.com/blog/2024-01-16.nas%E5%8F%8D%E4%BB%A3%E5%86%85%E7%BD%91%E6%9C%8D%E5%8A%A1%E5%8F%AA%E9%9C%80%E4%B8%80%E4%B8%AA%E7%AB%AF%E5%8F%A3%E5%B0%B1%E5%A4%9F%E5%95%A6/</guid>
      <description>
        
        
        &lt;p&gt;{% note pink &amp;lsquo;fas fa-car-crash&amp;rsquo; modern %}来不及解释了 系好安全带 快上车！！！{% endnote %}&lt;/p&gt;
&lt;p&gt;{% progress 10 red 进度10％ %}&lt;/p&gt;
&lt;h2&gt;思路分析&lt;span class=&#34;absolute -mt-20&#34; id=&#34;思路分析&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%80%9d%e8%b7%af%e5%88%86%e6%9e%90&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我太清楚把玩软路由跟Nas的朋友想要体验到什么样的效果了 奈何网上教程杂乱无章 大多都写得很烂 没有一个靠谱的大佬指导 期间会踩很多坑 那种无助的感觉 在我这不会存在了&lt;/p&gt;
&lt;p&gt;此教程将带领新手抓住每一个细节 学会家用Nas或软路由反代内网服务 类似于qB TR这样的下载器 又或者Emby Plex这样的影视媒体库 又或者爱快 群晖 MoviePilot的后台等等 我要教会大家的就是怎么样给这些服务 每一个都安排一个二级域名 类似于&lt;/p&gt;
&lt;p&gt;qb的:qb.xxx.com:888
emby的:emby.xxx.com:888&lt;/p&gt;
&lt;p&gt;但众所周知的是 家宽的80 443端口均为封禁状态 我们没法直接调用 只能在这些域名后面手动添加其他的端口才能访问 但一个域名转发映射不同的端口又难记住 所以很多人都有一个想法 给他们安排一个专属的二级域名 然后统一不变但又可用的端口 类似888 不就行了嘛 是的 这方法非常可行！此教程就会带领大家手把手学废 从家宽v4或v6 ddns到Cloudflare开始！&lt;/p&gt;
&lt;h2&gt;准备事项&lt;span class=&#34;absolute -mt-20&#34; id=&#34;准备事项&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%87%86%e5%a4%87%e4%ba%8b%e9%a1%b9&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Docker环境
（不管你是什么nas软路由都有这玩意吧 咱们需要的工具很简单 直接docker命令安装）&lt;/li&gt;
&lt;li&gt;CloudFlare账号
（我们是要开ssl的！必须用这个 {% del 毕竟泛域名15年免续签 你域名过期了 证书都不会过期 %} 阿里云用户把dns解析转到cf谢谢 ）
（暂时可以了解一下 源证书目前不适用本教程 因为CloudFlare的自签证书不开小云朵不给用）
{% link 注册CloudFlare账号, &lt;a href=&#34;https://dash.cloudflare.com/sign-up&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://dash.cloudflare.com/sign-up&lt;/a&gt;, &lt;a href=&#34;https://www.vectorlogo.zone/logos/cloudflare/cloudflare-icon.svg&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://www.vectorlogo.zone/logos/cloudflare/cloudflare-icon.svg&lt;/a&gt; %}&lt;/li&gt;
&lt;li&gt;公网V4或开启IPV6
（V6用户需要另一端也开启V6地址才能访问 手机流量已经普及 你公司网络可不一定哦~）&lt;/li&gt;
&lt;li&gt;安装DDNS-Go
（不要用爱快自带的 不要问我为什么 必须用这个！！！！）&lt;/li&gt;
&lt;li&gt;安装NginxProxyManager
（简称NPM 咱们就靠这个来反代 这工具简单还稳定 nginx也行 但我觉得对新人来说没这么方便）&lt;/li&gt;
&lt;/ol&gt;
&lt;h2&gt;安装DDNS-GO&lt;span class=&#34;absolute -mt-20&#34; id=&#34;安装ddns-go&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%ae%89%e8%a3%85ddns-go&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;ddnsgo文档参考：https://gitee.com/yuanly/Jeessy-DDNS-GO&lt;/li&gt;
&lt;li&gt;不想麻烦这一步 群晖是有套件版本的 直接装 这一段不用看了 笑死&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;Linux一键安装命令&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Linux系统默认安装到opt目录 直接复制粘贴到你Linux的终端里运行即可&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;docker run -d --name ddns-go --restart=always --net=host -v /opt/ddns-go:/root jeessy/ddns-go&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;群晖一键安装命令
本文全程按照群晖Nas示范 所以你需要把安装命令里的路径给替换掉
/opt/ddns-go 更换成 /volume1/docker/ddnsgo
&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; /&gt;
如果你跟我一样的习惯 可以直接调用以下命令&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;docker run -d --name ddns-go --restart=always --net=host -v /volume1/docker/ddnsgo:/root jeessy/ddns-go&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;群晖Nas安装教程&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imaged604d5e88153d0a5.png&#34; alt=&#34;imaged604d5e88153d0a5.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image15bc361ca7a2a77f.png&#34; alt=&#34;image15bc361ca7a2a77f.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image6816b4633c6c9c7e.png&#34; alt=&#34;image6816b4633c6c9c7e.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image7b4b503058cbebbc.png&#34; alt=&#34;image7b4b503058cbebbc.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image1479e357422d3850.png&#34; alt=&#34;image1479e357422d3850.png&#34; loading=&#34;lazy&#34; /&gt;
ps：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;我不确定群晖是否会自动给你创建文件夹（已确定会自动创建文件夹）  {% del 为了一次性成功不报错 请先去docker文件夹下创建ddnsgo的文件夹 %}&lt;/li&gt;
&lt;li&gt;计划任务运行后不要急着删除 其实可以一直留着 方便以后再次命令安装docker或执行其他需要用到root的命令 就算他重启后自动再次运行一遍 只要你没有删除那个容器 不会有任何问题 一样正常使用的 不放心再删掉&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;CloudFlare获取API&lt;span class=&#34;absolute -mt-20&#34; id=&#34;cloudflare获取api&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#cloudflare%e8%8e%b7%e5%8f%96api&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;{% tip warning faa-horizontal animated-hover %}API获取好了复制发微信或记事本里存着 以后长期都需要用到。{% endtip %}&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image2fcffcb9d5a1b038.png&#34; alt=&#34;image2fcffcb9d5a1b038.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image378717908dc3caaa.png&#34; alt=&#34;image378717908dc3caaa.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image2a04407bfa54a710.png&#34; alt=&#34;image2a04407bfa54a710.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image654fa55cf6b155ce.png&#34; alt=&#34;image654fa55cf6b155ce.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imageaad192c874f41966.png&#34; alt=&#34;imageaad192c874f41966.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imagec00ced5fe90533df.png&#34; alt=&#34;imagec00ced5fe90533df.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image712d1de70881464e.png&#34; alt=&#34;image712d1de70881464e.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image3e67136a7adfd9eb.png&#34; alt=&#34;image3e67136a7adfd9eb.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;{% progress 50 green 进度50％ %}&lt;/p&gt;
&lt;h2&gt;安装NginxProxyManager&lt;span class=&#34;absolute -mt-20&#34; id=&#34;安装nginxproxymanager&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%ae%89%e8%a3%85nginxproxymanager&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;按照上面安装ddnsgo的方法 再次安装npm 所以那个创建好的计划任务别急着删！！！这里复制好粘贴进去&lt;/p&gt;
&lt;p&gt;这个我就不提供Linux默认安装的命令 我来解释每一行的参数代表什么意思
Linux用户只需要根据我对各个参数的解释 你自己想怎么改就怎么改就行了&lt;/p&gt;
&lt;p&gt;Nas用户必须给我理解下面啥意思 我会逐条解释 我就不信你懂不了！&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;docker run -d \
  --name nginxmanager \
  -p 8080:80 \
  -p 81:81 \
  -p 888:443 \
  -v /volume1/docker/npm:/data \
  -v /volume1/docker/npm:/etc/letsencrypt \
  --restart=always \
  jc21/nginx-proxy-manager&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;当您运行上述的Docker命令时，每一行的含义如下：&lt;span class=&#34;absolute -mt-20&#34; id=&#34;当您运行上述的docker命令时每一行的含义如下&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%bd%93%e6%82%a8%e8%bf%90%e8%a1%8c%e4%b8%8a%e8%bf%b0%e7%9a%84docker%e5%91%bd%e4%bb%a4%e6%97%b6%e6%af%8f%e4%b8%80%e8%a1%8c%e7%9a%84%e5%90%ab%e4%b9%89%e5%a6%82%e4%b8%8b&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;&lt;code&gt;docker run -d&lt;/code&gt;: 运行一个新的容器。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--name nginxmanager&lt;/code&gt;: 指定容器的名称为 &amp;ldquo;nginxmanager&amp;rdquo;。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 8080:80&lt;/code&gt;: 将主机上的端口8080映射到容器内的80端口。这样，您可以通过 &lt;code&gt;http://localhost:8080&lt;/code&gt; 访问NginxProxyManager的HTTP端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 81:81&lt;/code&gt;: 将主机上的端口81映射到容器内的81端口。这样，您可以通过 &lt;code&gt;http://localhost:81&lt;/code&gt; 访问NginxProxyManager的后台管理界面。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-p 888:443&lt;/code&gt;: 将主机上的端口888映射到容器内的443端口。这样，您可以通过 &lt;code&gt;https://localhost:888&lt;/code&gt; 访问NginxProxyManager的HTTPS端口。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v /volume1/docker/npm:/data&lt;/code&gt;: 将主机上的目录 &lt;code&gt;/volume1/docker/npm&lt;/code&gt; 映射到容器内的 &lt;code&gt;/data&lt;/code&gt; 目录。这样，您可以在主机上持久化存储NginxProxyManager的数据。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;-v /volume1/docker/npm:/etc/letsencrypt&lt;/code&gt;: 将主机上的目录 &lt;code&gt;/volume1/docker/npm&lt;/code&gt; 映射到容器内的 &lt;code&gt;/etc/letsencrypt&lt;/code&gt; 目录。这样，您可以在主机上持久化存储NginxProxyManager的证书。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;--restart=always&lt;/code&gt;: 设置容器在启动时自动重启。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;jc21/nginx-proxy-manager&lt;/code&gt;: 使用镜像 &lt;code&gt;jc21/nginx-proxy-manager&lt;/code&gt; 来创建容器。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;重点就是映射路径需要改到你群晖对应的存储空间 我是拿默认的存储空间1（/volume1）放置docker 大部分人其实照抄就完事了 有的人docker的共享文件夹不在存储空间1上 你就直接改数字就完事了 后面的保持不动就完事了&lt;/p&gt;
&lt;p&gt;然后就是我把http的端口改到了8080 https端口改到了888 来应对80跟443端口都被封掉了情况 这样我们直接把nas的ip的8080 888端口对应的转发到公网就完事了 还不懂我要杀人了！！！&lt;/p&gt;
&lt;h2&gt;配置NginxProxyManager&lt;span class=&#34;absolute -mt-20&#34; id=&#34;配置nginxproxymanager&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e9%85%8d%e7%bd%aenginxproxymanager&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;装好后点开面板即可查看这个容器创建好并自动运行了
打开你Nas的ip+81端口即可访问面板后台&lt;/p&gt;
&lt;p&gt;默认账号admin@example.com，密码：changeme
&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image3b4056d8e156096e.png&#34; alt=&#34;image3b4056d8e156096e.png&#34; loading=&#34;lazy&#34; /&gt;
登陆上去了会强制改邮箱跟密码 按照提示改就好&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image742fe97b744e451f.png&#34; alt=&#34;image742fe97b744e451f.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;教程都快写完了发现CloudFlare的15年自签证书翻车了 那证书不开小云朵不给你用的 emby nas这种套了cf的cdn还能用啊 卡得一批 被我紧急取消了 那个大家可以了解性的学习下 我暂时不提供更高级别的教程 影响不好 想学可以去别处 我们还是根据网上的传统教程申请&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;申请 Let&amp;rsquo;s Encrypt 三个月的证书&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/18/image.png&#34; alt=&#34;image.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/18/image79f0b322a141793f.png&#34; alt=&#34;image79f0b322a141793f.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;接下来我们就可以开始反代内网服务到公网了&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imagebe8925d382633e54.png&#34; alt=&#34;imagebe8925d382633e54.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;举例我的qb地址为：http://192.168.31.1:8080&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image96e87f75fc70a23d.png&#34; alt=&#34;image96e87f75fc70a23d.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;截图IP打错了不要在意这些细节&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/image8572058c05de2eba.png&#34; alt=&#34;image8572058c05de2eba.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imagef1121d60e5c782a1.png&#34; alt=&#34;imagef1121d60e5c782a1.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;到这就结束了 其他反代内容根据这一举例 自行添加。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2&gt;路由器端口转发&lt;span class=&#34;absolute -mt-20&#34; id=&#34;路由器端口转发&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e8%b7%af%e7%94%b1%e5%99%a8%e7%ab%af%e5%8f%a3%e8%bd%ac%e5%8f%91&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;到了最后一步了 不管你是硬路由还是软路由 端口转发不需要我多教吧？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;把Nas的ip的http的端口 8080转到8080&lt;/li&gt;
&lt;li&gt;https的端口888 转发到888&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;到了这一步 都知道443 80的内网端口也是可以转成任意端口的 但还是那句话 为了严谨长期保持稳定 避免未知服务抢占80 443端口 群晖的webstation就是会这样干的。。。所以不要来质疑我为啥这样教大家 咱们开启域名访问的好处也不止是方便访问 而是开启ssl！https没有烦人的警告了也更安全。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/17/imagef2ea23fdc219f9a1.png&#34; alt=&#34;imagef2ea23fdc219f9a1.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h2&gt;最后测试&lt;span class=&#34;absolute -mt-20&#34; id=&#34;最后测试&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%9c%80%e5%90%8e%e6%b5%8b%e8%af%95&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;以上都做完了 默认cf不需要再改动什么操作了 域名加端口即可直接访问服务页面&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/18/image5ca8c286431b455d.png&#34; alt=&#34;image5ca8c286431b455d.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/18/image82907471077a8ace.png&#34; alt=&#34;image82907471077a8ace.png&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;p&gt;至此 教程结束 感谢观看。
{% progress 100 gray 进度100％ %}&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
