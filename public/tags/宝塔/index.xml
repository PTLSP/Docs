<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PTLSPの文档 – 宝塔</title>
    <link>https://docs.ptlsp.com/tags/%E5%AE%9D%E5%A1%94/</link>
    <description>Recent content in 宝塔 on PTLSPの文档</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-CN</language>
    <lastBuildDate>Sat, 27 Jan 2024 23:12:36 +0000</lastBuildDate>
    
	  <atom:link href="https://docs.ptlsp.com/tags/%E5%AE%9D%E5%A1%94/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>批量获取当前路径文件URL</title>
      <link>https://docs.ptlsp.com/blog/2024-01-27.%E5%AE%9D%E5%A1%94%E6%89%B9%E9%87%8F%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E6%96%87%E4%BB%B6url/</link>
      <pubDate>Sat, 27 Jan 2024 23:12:36 +0000</pubDate>
      
      <guid>https://docs.ptlsp.com/blog/2024-01-27.%E5%AE%9D%E5%A1%94%E6%89%B9%E9%87%8F%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E8%B7%AF%E5%BE%84%E6%96%87%E4%BB%B6url/</guid>
      <description>
        
        
        &lt;h2&gt;前言&lt;span class=&#34;absolute -mt-20&#34; id=&#34;前言&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%89%8d%e8%a8%80&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;我之前做了一个二次元随机图嘛：&lt;/p&gt;
&lt;p&gt;![](/img/截屏2024-01-28 上午1.19.39.png)&lt;/p&gt;
&lt;p&gt;random.php 直接指向random文件夹下的图片 源码如下：&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;&amp;lt;?php
// 指定图片目录的相对路径
$img_dir = &amp;#39;random/&amp;#39;;

// 获取符合条件的图片列表
$img_list = glob($img_dir . &amp;#39;*.{gif,jpg,png,webp}&amp;#39;, GLOB_BRACE);

// 如果图片列表不为空，则随机选择一张图片并输出
if (!empty($img_list)) {
    $img_url = $img_list[array_rand($img_list)];

    // 获取图片类型
    $img_info = getimagesize($img_url);
    if ($img_info !== false) {
        $img_mime = $img_info[&amp;#39;mime&amp;#39;];
        header(&amp;#39;Content-Type: &amp;#39; . $img_mime); // 设置输出的内容类型为图片的 MIME 类型
        readfile($img_url);
        exit;
    } else {
        echo &amp;#39;Failed to determine the image type.&amp;#39;;
    }
} else {
    // 如果图片列表为空，则输出错误信息
    echo &amp;#39;No images found in &amp;#39; . $img_dir;
}
?&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Nginx的伪静态配置如下：&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;location /random {
    rewrite ^/random$ /random.php last;
}

location /cover {
    rewrite ^/random$ /cover.php last;
}

location /gif {
    rewrite ^/random$ /gif.php last;
}

location /4k {
    rewrite ^/random$ /4k.php last;
}
location /mp {
    rewrite ^/random$ /mp.php last;
}&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;目的是为了获取随机图接口地址固定为：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://xxx.xxx.com/random&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xxx.xxx.com/random&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;指向的实际路径为:https://xxx.xxx.com/random.php&lt;/p&gt;
&lt;p&gt;这样能解决某些框架获取不到.php路径 采取的解决办法&lt;/p&gt;
&lt;p&gt;效果自然是非常ok 但有个问题就是 虽然路径固定了 random路径下的文件也确实被cloudflare缓存了 但我不确定是不是我单独打开图片真实路径那一刻才缓存上的&lt;/p&gt;
&lt;h2&gt;发现问题点并尝试优化&lt;span class=&#34;absolute -mt-20&#34; id=&#34;发现问题点并尝试优化&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%8f%91%e7%8e%b0%e9%97%ae%e9%a2%98%e7%82%b9%e5%b9%b6%e5%b0%9d%e8%af%95%e4%bc%98%e5%8c%96&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;监控网站源服务器发现上传的流量还是不少 所以就很怀疑是不是没被cf缓存上 每次都从源服务器获取图片 而且random这个接口是获取不到原图片文件夹下的真实路径的 如果用户访问你的博客 非常喜欢这个图 想扒会非常困难 而且也不方便随时调用其他url地址的图片&lt;/p&gt;
&lt;p&gt;而我在制作随机图前就知道了php源码是可以通过调用txt文本里面url来实现跳转到图片url或直接调用本地目录图片的url的&lt;/p&gt;
&lt;p&gt;我也早就发现有大佬把图片传到gitee仓库 用我这个教程的方法来批量获取图片路径 用跳转的方式来打开图片 那速度嘎嘎快 比cf的cdn快得多！而且还不占用服务器存储！！！&lt;/p&gt;
&lt;p&gt;想法有了 可行性也具备了 就差实际行动！接下来就是具体实现教程！&lt;/p&gt;
&lt;h2&gt;利用脚本获取文件夹路径并指定网址前缀&lt;span class=&#34;absolute -mt-20&#34; id=&#34;利用脚本获取文件夹路径并指定网址前缀&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e5%88%a9%e7%94%a8%e8%84%9a%e6%9c%ac%e8%8e%b7%e5%8f%96%e6%96%87%e4%bb%b6%e5%a4%b9%e8%b7%af%e5%be%84%e5%b9%b6%e6%8c%87%e5%ae%9a%e7%bd%91%e5%9d%80%e5%89%8d%e7%bc%80&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;要实现批量获取 random 路径下文件的路径，并在路径前面加上网址 &lt;a href=&#34;https://xxx.xxx.com&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xxx.xxx.com&lt;/a&gt; ，您可以使用以下脚本来实现：&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;#!/bin/bash

base_url=&amp;#34;https://xxx.xxx.com/random/&amp;#34;  # 网址前缀
directory=&amp;#34;/www/wwwroot/xxx.xxx.com/random&amp;#34;  # random 路径
output_file=&amp;#34;/www/wwwroot/xxx.xxx.com/random.txt&amp;#34;  # 输出文件名

# 遍历目录下的文件
for file in &amp;#34;$directory&amp;#34;/*; do
    if [ -f &amp;#34;$file&amp;#34; ]; then  # 只处理文件，不处理目录
        filename=$(basename &amp;#34;$file&amp;#34;)  # 获取文件名
        url=&amp;#34;$base_url$filename&amp;#34;  # 构建完整的 URL
        echo &amp;#34;$url&amp;#34; &amp;gt;&amp;gt; &amp;#34;$output_file&amp;#34;  # 输出 URL到文件
    fi
done&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;请将上述脚本中的 /www/wwwroot/xxx.xxx.com/random 替换为您实际的路径。运行脚本后，它将遍历指定目录下的文件，并输出每个文件的完整 URL，其中网址前缀为 &lt;a href=&#34;https://xxx.xxx.com/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;https://xxx.xxx.com/&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;您可以将脚本保存为一个文件（例如 get_random_urls.sh），并在终端中运行以下命令来执行脚本：&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;bash get_random_urls.sh&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;脚本将输出每个文件的 URL，您可以将输出保存到文件中或按需进行进一步处理。&lt;/p&gt;
&lt;p&gt;{% tip warning faa-parent animated-hover %}&lt;p class=&#34;faa-horizontal&#34;&gt;请注意，脚本假设 random 路径下只包含文件，不包含子目录！所以请单独分类，以上举例请根据实际情况修改。&lt;/p&gt;{% endtip %}&lt;/p&gt;
&lt;h3&gt;成功把random文件夹下的图片路径批量获取URL写入到random.txt文件&lt;span class=&#34;absolute -mt-20&#34; id=&#34;成功把random文件夹下的图片路径批量获取url写入到randomtxt文件&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#%e6%88%90%e5%8a%9f%e6%8a%8arandom%e6%96%87%e4%bb%b6%e5%a4%b9%e4%b8%8b%e7%9a%84%e5%9b%be%e7%89%87%e8%b7%af%e5%be%84%e6%89%b9%e9%87%8f%e8%8e%b7%e5%8f%96url%e5%86%99%e5%85%a5%e5%88%b0randomtxt%e6%96%87%e4%bb%b6&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;&lt;img src=&#34;https://t.ptlsp.com/images/2024/01/28/image23bb8216a42fbf1c.png&#34; alt=&#34;&#34; loading=&#34;lazy&#34; /&gt;&lt;/p&gt;
&lt;h3&gt;F12已经能够获取到图片的真实路径了&lt;span class=&#34;absolute -mt-20&#34; id=&#34;f12已经能够获取到图片的真实路径了&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#f12%e5%b7%b2%e7%bb%8f%e8%83%bd%e5%a4%9f%e8%8e%b7%e5%8f%96%e5%88%b0%e5%9b%be%e7%89%87%e7%9a%84%e7%9c%9f%e5%ae%9e%e8%b7%af%e5%be%84%e4%ba%86&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;![](/img/截屏2024-01-28 上午1.16.35.png)&lt;/p&gt;
&lt;p&gt;没写完没写完没写完！！！！！没写完没写完没写完！！！！！没写完没写完没写完！！！！！&lt;/p&gt;

      </description>
    </item>
    
  </channel>
</rss>
